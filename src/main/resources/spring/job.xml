<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <!-- Job Repository -->
    <bean id="jobRepository"
        class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
    </bean>
 
    <!-- Job Launcher -->
    <bean id="jobLauncher"
        class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>
    
    <!-- Job -->
    <batch:job id="loadPersonsJob" job-repository="jobRepository">
        <batch:step id="loadPersonsFromFileStep" parent="baseLoadPersonsFromFileStep">
            <batch:next on="CONTINUE" to="loadPersonsFromFileStep" />
            <batch:next on="COMPLETED" to="sometimesFailingStep" />
        </batch:step> 
        
        <batch:step id="sometimesFailingStep">
            <batch:tasklet ref="failingTasklet" />
        </batch:step> 
    </batch:job>

    <!-- START Load Persons from file step details -->
    <batch:step id="baseLoadPersonsFromFileStep">
        <batch:tasklet>
            <batch:chunk reader="personCvsFileItemReader" processor="personProcessor"
                    writer="hibernateItemWriter" commit-interval="2">
            </batch:chunk>
        </batch:tasklet>
        <batch:listeners>
            <batch:listener ref="personStepListener" />
        </batch:listeners>
    </batch:step>
    
    <bean id="personModel" class="com.trustwave.batch.model.Person" scope="prototype" />
    
	<bean id="personCvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:input/input.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="name,party,income" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="personModel" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

    <bean id="personProcessor" scope="step" class="com.trustwave.batch.processor.PersonProcessor">
        <constructor-arg value="#{jobParameters['loadDate']}"/>
        <constructor-arg value="#{jobParameters['runId']}"/>
    </bean>

    <!-- Hibernate Item Writer -->
    <bean id="hibernateItemWriter" class="org.springframework.batch.item.database.HibernateItemWriter">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!-- END Load Persons from file step details -->
    
    <!-- Failing Tasklet -->
    <bean id="failingTasklet" scope="step" class="com.trustwave.batch.tasklet.FailingTasklet">
        <constructor-arg value="#{jobParameters['fail']}" />
    </bean>
    
    <!-- Listeners -->
    <bean id="personStepListener" class="com.trustwave.batch.listener.PersonStepListener" />

</beans>
